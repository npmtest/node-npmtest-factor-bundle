{"/home/travis/build/npmtest/node-npmtest-factor-bundle/test.js":"/* istanbul instrument in package npmtest_factor_bundle */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-factor-bundle/lib.npmtest_factor_bundle.js":"/* istanbul instrument in package npmtest_factor_bundle */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_factor_bundle = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_factor_bundle = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-factor-bundle/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-factor-bundle && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_factor_bundle */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_factor_bundle\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught.stack);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_factor_bundle.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_factor_bundle.rollup.js'] =\n            local.assetsDict['/assets.npmtest_factor_bundle.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_factor_bundle.__dirname +\n                    '/lib.npmtest_factor_bundle.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-factor-bundle/factor-bundle/index.js":"var Transform = require('stream').Transform;\nvar through = require('through2');\nvar Readable = require('stream').Readable;\nvar inherits = require('inherits');\nvar path = require('path');\nvar JSONStream = require('JSONStream');\nvar combine = require('stream-combiner');\nvar nub = require('nub');\nvar depsTopoSort = require('deps-topo-sort');\nvar reverse = require('reversepoint');\nvar fs = require('fs');\nvar pack = require('browser-pack');\nvar xtend = require('xtend');\nvar defined = require('defined');\nvar splicer = require('labeled-stream-splicer');\nvar outpipe = require('outpipe');\nvar isarray = require('isarray');\n\nmodule.exports = function f (b, opts) {\n    if (!opts) opts = {};\n    if (typeof b === 'string' || Array.isArray(b)) {\n        return createStream(b, opts)\n    }\n\n    var files = [].concat(opts.entries).concat(opts.e)\n        .concat(opts._).filter(Boolean);\n\n    var needRecords = !files.length;\n    \n    var outopt = defined(opts.outputs, opts.output, opts.o);\n     \n    opts.objectMode = true;\n    opts.raw = true;\n    opts.rmap = {};\n\n    var cwd = defined(opts.basedir, b._options.basedir, process.cwd()),\n        packOpts = xtend(b._options, {\n          raw: true,\n          hasExports: true\n        });\n\n    b.on('reset', addHooks);\n    addHooks();\n\n    function addHooks () {\n        b.pipeline.get('record').push(through.obj(function(row, enc, next) {\n            if (row.file && needRecords) {\n                files.push(row.file);\n            }\n            next(null, row);\n        }, function(next) {\n            var outopt = defined(opts.outputs, opts.output, opts.o);\n\n            if (typeof outopt === 'function') {\n                outopt = outopt();\n            }\n\n            var outputs;\n            if (isarray(outopt)) {\n                outputs = outopt.map(function (o) {\n                    if (isStream(o)) return o;\n                    return fs.createWriteStream(o);\n                });\n            } else {\n                outputs = [];\n            }\n\n            function moreOutputs (file) {\n                if (isarray(outopt)) return [];\n                if (!outopt) return [];\n                var xopts = { env: xtend(process.env, { FILE: file }) };\n                return [ outpipe(outopt, xopts) ];\n            }\n\n            var pipelines = files.reduce(function (acc, x, ix) {\n                var pipeline = splicer.obj([\n                    'pack', [ pack(packOpts) ],\n                    'wrap', []\n                ]);\n\n                if (ix >= outputs.length) {\n                    outputs.push.apply(outputs, moreOutputs(x));\n                }\n                if (outputs[ix]) pipeline.pipe(outputs[ix]);\n                \n                acc[path.resolve(cwd, x)] = pipeline;\n                return acc;\n            }, {});\n\n            // Force browser-pack to wrap the common bundle\n            b._bpack.hasExports = true;\n\n            Object.keys(pipelines).forEach(function (id) {\n                b.emit('factor.pipeline', id, pipelines[id]);\n            });\n\n            var s = createStream(files, opts);\n            s.on('stream', function (bundle) {\n                bundle.pipe(pipelines[bundle.file]);\n            });\n\n            b.pipeline.get('pack').unshift(s);\n\n            if (needRecords) files = [];\n\n            next();\n        }));\n\n        b.pipeline.get('label').push(through.obj(function(row, enc, next) {\n            opts.rmap[row.id] = path.resolve(cwd, row.file);\n            next(null, row);\n        }));\n    }\n\n    return b;\n\n};\n\nfunction createStream (files, opts) {\n    if (!opts) opts = {};\n    \n    var fr = new Factor(files, opts);\n    var parse, dup;\n    \n    if (opts.objectMode) {\n        dup = combine(depsTopoSort(), reverse(), fr);\n    }\n    else {\n        parse = JSONStream.parse([true]);\n        dup = opts.raw\n            ? combine(parse, depsTopoSort(), reverse(), fr)\n            : combine(\n                parse, depsTopoSort(), reverse(), fr, JSONStream.stringify()\n            )\n        ;\n        parse.on('error', function (err) { dup.emit('error', err) });\n    }\n    \n    fr.on('error', function (err) { dup.emit('error', err) });\n    fr.on('stream', function (s) {\n        if (opts.raw) dup.emit('stream', s)\n        else dup.emit('stream', s.pipe(JSONStream.stringify()))\n    });\n    return dup;\n}\n\ninherits(Factor, Transform);\n\nfunction Factor (files, opts) {\n    var self = this;\n    if (!(this instanceof Factor)) return new Factor(files, opts);\n    Transform.call(this, { objectMode: true });\n    \n    if (!opts) opts = {};\n    this.basedir = defined(opts.basedir, process.cwd());\n    \n    this._streams = {};\n    this._groups = {};\n    this._buffered = {};\n    \n    this._ensureCommon = {};\n    this._files = files.reduce(function (acc, file) {\n        acc[path.resolve(self.basedir, file)] = true;\n        return acc;\n    }, {});\n    this._rmap = opts.rmap || {};\n    \n    this._thresholdVal = typeof opts.threshold === \"number\"\n        ? opts.threshold : 1\n    ;\n    this._defaultThreshold = function(row, group) {\n        return group.length > this._thresholdVal || group.length === 0;\n    };\n    this._threshold = typeof opts.threshold === \"function\"\n        ? opts.threshold\n        : this._defaultThreshold\n    ;\n}\n\nFactor.prototype._transform = function (row, enc, next) {\n    var self = this;\n    var groups = nub(self._groups[row.id] || []);\n    var id = this._resolveMap(row.id);\n\n    if (self._files[id]) {\n        var s = self._streams[id];\n        if (!s) s = self._makeStream(row);\n        groups.push(id);\n    }\n    groups.forEach(addGroups);\n\n    if (self._ensureCommon[row.id] || self._threshold(row, groups)) {\n        Object.keys(row.deps).forEach(function(k) {\n            self._ensureCommon[row.deps[k]] = true;\n        });\n        self.push(row);\n    }\n    else {\n        groups.forEach(function (id) {\n            self._streams[id].push(row);\n        });\n    }\n    \n    next();\n    \n    function addGroups (gid) {\n        Object.keys(row.deps || {}).forEach(function (key) {\n            var file = row.deps[key];\n            var g = self._groups[file];\n            if (!g) g = self._groups[file] = [];\n            g.push(gid);\n        });\n    }\n};\n\nFactor.prototype._flush = function () {\n    var self = this;\n    \n    Object.keys(self._streams).forEach(function (key) {\n        self._streams[key].push(null);\n    });\n    self.push(null);\n};\n\nFactor.prototype._makeStream = function (row) {\n    var s = new Readable({ objectMode: true });\n    var id = this._resolveMap(row.id);\n    s.file = id;\n    s._read = function () {};\n    this._streams[id] = s;\n    this.emit('stream', s);\n    return s;\n};\n\nFactor.prototype._resolveMap = function(id) {\n    return this._rmap[id] || id;\n}\n\nfunction isStream (s) { return s && typeof s.pipe === 'function' }\n"}